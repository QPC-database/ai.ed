using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Threading.Tasks;

namespace webserver.Helpers
{
    public class RunCmd
    {
        public bool hasError {get; set;}
        public string errorMsg { get; set; }
        public bool isBackground = false;
        public RunCmd(bool isBackground)
        {
            this.isBackground = isBackground;
        }

        public string Run(string cmd, string arg, string ip, string port)
        {
            ProcessStartInfo start = new ProcessStartInfo();
            start.FileName = Constants.pyMacerPath + "pymacer\\Scripts\\python";
            start.Arguments = string.Format("\"{0}\" \"{1}\" \"{2}\" \"{3}\"", cmd, arg, ip, port);
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = true; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            if (this.isBackground)
            {
                Action<object> action = (object obj) =>
                {
                    ProcessStartInfo startInfo = (ProcessStartInfo)obj;
                    startProcess(startInfo);
                };
                Task.Factory.StartNew(action, start);
                return "";
            }
            else
            {
                return startProcess(start);
            }
        }

        public string startProcess(ProcessStartInfo start)
        {
            using (Process process = Process.Start(start))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                    if (stderr != "")
                    {
                        hasError = true;
                        errorMsg = stderr;
                    }
                    string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                    return result;
                }
            }
        }
    }
}
